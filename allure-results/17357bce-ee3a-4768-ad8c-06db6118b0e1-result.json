{"name": "test_sorting_by_price", "status": "failed", "statusDetails": {"message": "Failed: No sort option produced ascending prices.\nTried options: ['Sort items by...', 'PRODUCTS', '© 2019 Sauce Labs. All Rights Reserved.', 'Terms of Service | Privacy Policy', '\\uf099', '\\uf09a', '\\uf0d5', '\\uf0e1']\nLast prices observed: [29.99, 9.99, 15.99, 49.99, 7.99, 15.99]\nPage-source start:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><AppiumAUT><XCUIElementTypeApplication type=\"XCUIElementTypeApplication\" name=\"Swag Labs Mobile App\" label=\"Swag Labs Mobile App\" enabled=\"true\" visible=\"true\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\n  <XCUIElementTypeWindow type=\"XCUIElementTypeWindow\" enabled=\"true\" visible=\"true\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\n    <XCUIElementTypeOther type=\"XCUIElementTypeOther\" enabled=\"true\" visible=\"false\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\n      <XCUIElementTypeOther type=\"XCUIElementTypeOther\" name=\"Username Password LOGIN The currently accepted usernames for this application are:\n\nstandard_user\nlocked_out_user\nproblem_user And the password for all users is:\n\nsecret_sauce Vertical scroll bar, 2 pages Horizontal scroll bar, 1 page PRODUCTS Sauce Labs Backpack $29.99 ADD TO CART Sauce Labs Bike Light $9.99 ADD TO CART Sauce Labs Bolt T-Shirt $15.99 ADD TO CART Sauce Labs Fleece Jacket $49.99 ADD TO CART Sauce Labs Onesie $7.99 ADD TO CART Test.allTheThings() T-Shirt (Red) $15.99 ADD TO CART Vertical scroll bar, 1 page Horizontal scroll bar, 1 page     © 2019 Sauce Labs. All Rights Reserved. Terms of Service | Privacy Policy Vertical scroll bar, 3 pages Horizontal scroll bar, 1 page ALL ITEMS WEBVIEW ABOUT LOGOUT RESET APP STATE\" label=\"Username Password LOGIN The currently accepted usernames for this application are:\n\nstandard_user\nlocked_out_user\nproblem_user And the password for all users is:\n\nsecret_sauce Vertical scroll bar, 2 pages Horizontal scroll bar, 1 page PRODUCTS Sauce Labs Backpack $29.99 ADD TO CART Sauce Labs Bike Light $9.99 ADD TO CART Sauce Labs Bolt T-Shirt $15.99 ADD TO CART Sauce Labs Fleece Jacket $49.99 ADD TO CART Sauce Labs Onesie $7.99 ADD TO CART Test.allTheThings() T-Shirt (Red) $15.99 ADD TO CART Vertical scroll bar, 1 page Horizontal scroll bar, 1 page     © 2019 Sauce Labs. All Rights Reserved. Terms of Service | Privacy Policy Vertical scroll bar, 3 pages Horizontal scroll bar, 1 page ALL ITEMS WEBVIEW ABOUT LOGOUT RESET APP STATE\" enabled=\"true\" visible=\"false\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\n        <XCUIElementTypeOther type=\"XCUIElementTypeOther\" name=\"Username Password LOGIN The currently accepted usernames for this application are:\n\nstandard_user\nlocked_out_user\nproblem_user And the password for all users is:\n\nsecret", "trace": "driver = <appium.webdriver.webdriver.WebDriver (session=\"d1f5c4f5f342d57666549ff0d7582d409d26d4f8\")>\n\n    def test_sorting_by_price(driver):\n        login(driver)\n        pp = ProductsPage(driver)\n        pp.wait_for_products()\n    \n        opened, errors = _open_sort_control(driver)\n        if not opened:\n            pytest.skip(f\"Sort control not found. Attempts: {errors}\")\n    \n        # 1) Try direct buttons/cells that mention price/low/high\n        tried_options = []\n        candidates = _find_sort_option_buttons_and_cells(driver)\n        print(f\"[DEBUG] Button/Cell candidates: {[t for (_, t) in candidates]}\")\n    \n        # candidate strings for picker wheel values (common labels)\n        candidate_picker_values = [\n            \"Price (low to high)\",\n            \"Price (high to low)\",\n            \"Price (low to high)\",\n            \"Low to High\",\n            \"Low to high\",\n            \"low to high\",\n            \"Price (low to high) - Low to High\",\n            \"Price (lowest to highest)\",\n            \"Price (Lowest to Highest)\",\n        ]\n    \n        # try button/cell candidates first\n        success = False\n        last_prices = []\n        for (elem, text) in candidates:\n            tried_options.append(text)\n            try:\n                try:\n                    elem.click()\n                except Exception:\n                    try:\n                        driver = elem._parent\n                        driver.execute_script(\"mobile: tap\", {\"element\": elem.id})\n                    except Exception:\n                        loc = elem.location\n                        size = elem.size\n                        driver.execute_script(\"mobile: tap\", {\"x\": int(loc['x'] + size['width'] / 2), \"y\": int(loc['y'] + size['height'] / 2)})\n                time.sleep(1.0)\n                prices = _collect_prices_after_sort(driver)\n                last_prices = prices[:]\n                print(f\"[DEBUG] After selecting option '{text}' prices: {prices}\")\n                if prices and prices == sorted(prices):\n                    success = True\n                    break\n            except Exception as e:\n                print(f\"[DEBUG] clicking '{text}' raised: {e}\")\n            # re-open modal to try next\n            try:\n                opened, _ = _open_sort_control(driver)\n                time.sleep(0.5)\n            except Exception:\n                pass\n    \n        if not success:\n            # 2) Try picker wheels (if present)\n            wheels = _find_picker_wheels(driver)\n            print(f\"[DEBUG] Picker wheels found: {len(wheels)}\")\n            if wheels:\n                # try a few possible label strings\n                for wheel in wheels:\n                    v = _try_set_picker_wheel(wheel, candidate_picker_values)\n                    if v:\n                        tried_options.append(f\"picker:{v}\")\n                        time.sleep(1.0)\n                        prices = _collect_prices_after_sort(driver)\n                        last_prices = prices[:]\n                        print(f\"[DEBUG] After setting picker to '{v}' prices: {prices}\")\n                        if prices and prices == sorted(prices):\n                            success = True\n                            break\n                    # if not success, re-open modal and continue\n                    try:\n                        opened, _ = _open_sort_control(driver)\n                        time.sleep(0.6)\n                    except Exception:\n                        pass\n    \n        if not success:\n            # 3) Final fallback: find top visible static texts and try them (we already tried many)\n            try:\n                statics = driver.find_elements(AppiumBy.XPATH, \"//XCUIElementTypeStaticText\")\n                count = 0\n                for s in statics:\n                    if count >= 8:\n                        break\n                    try:\n                        txt = (s.text or s.get_attribute(\"label\") or s.get_attribute(\"name\") or \"\").strip()\n                    except Exception:\n                        txt = \"\"\n                    if not txt:\n                        continue\n                    tried_options.append(txt)\n                    try:\n                        try:\n                            s.click()\n                        except Exception:\n                            driver = s._parent\n                            driver.execute_script(\"mobile: tap\", {\"element\": s.id})\n                        time.sleep(1.0)\n                        prices = _collect_prices_after_sort(driver)\n                        last_prices = prices[:]\n                        print(f\"[DEBUG] After selecting static '{txt}' prices: {prices}\")\n                        if prices and prices == sorted(prices):\n                            success = True\n                            break\n                    except Exception:\n                        pass\n                    count += 1\n                    try:\n                        opened, _ = _open_sort_control(driver)\n                        time.sleep(0.5)\n                    except Exception:\n                        pass\n            except Exception:\n                pass\n    \n        if not success:\n            src_snip = (driver.page_source or \"\")[:2500]\n>           pytest.fail(\n                \"No sort option produced ascending prices.\\n\"\n                f\"Tried options: {tried_options}\\n\"\n                f\"Last prices observed: {last_prices}\\n\"\n                \"Page-source start:\\n\" + src_snip\n            )\nE           Failed: No sort option produced ascending prices.\nE           Tried options: ['Sort items by...', 'PRODUCTS', '© 2019 Sauce Labs. All Rights Reserved.', 'Terms of Service | Privacy Policy', '\\uf099', '\\uf09a', '\\uf0d5', '\\uf0e1']\nE           Last prices observed: [29.99, 9.99, 15.99, 49.99, 7.99, 15.99]\nE           Page-source start:\nE           <?xml version=\"1.0\" encoding=\"UTF-8\"?><AppiumAUT><XCUIElementTypeApplication type=\"XCUIElementTypeApplication\" name=\"Swag Labs Mobile App\" label=\"Swag Labs Mobile App\" enabled=\"true\" visible=\"true\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\nE             <XCUIElementTypeWindow type=\"XCUIElementTypeWindow\" enabled=\"true\" visible=\"true\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\nE               <XCUIElementTypeOther type=\"XCUIElementTypeOther\" enabled=\"true\" visible=\"false\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\nE                 <XCUIElementTypeOther type=\"XCUIElementTypeOther\" name=\"Username Password LOGIN The currently accepted usernames for this application are:\nE           \nE           standard_user\nE           locked_out_user\nE           problem_user And the password for all users is:\nE           \nE           secret_sauce Vertical scroll bar, 2 pages Horizontal scroll bar, 1 page PRODUCTS Sauce Labs Backpack $29.99 ADD TO CART Sauce Labs Bike Light $9.99 ADD TO CART Sauce Labs Bolt T-Shirt $15.99 ADD TO CART Sauce Labs Fleece Jacket $49.99 ADD TO CART Sauce Labs Onesie $7.99 ADD TO CART Test.allTheThings() T-Shirt (Red) $15.99 ADD TO CART Vertical scroll bar, 1 page Horizontal scroll bar, 1 page     © 2019 Sauce Labs. All Rights Reserved. Terms of Service | Privacy Policy Vertical scroll bar, 3 pages Horizontal scroll bar, 1 page ALL ITEMS WEBVIEW ABOUT LOGOUT RESET APP STATE\" label=\"Username Password LOGIN The currently accepted usernames for this application are:\nE           \nE           standard_user\nE           locked_out_user\nE           problem_user And the password for all users is:\nE           \nE           secret_sauce Vertical scroll bar, 2 pages Horizontal scroll bar, 1 page PRODUCTS Sauce Labs Backpack $29.99 ADD TO CART Sauce Labs Bike Light $9.99 ADD TO CART Sauce Labs Bolt T-Shirt $15.99 ADD TO CART Sauce Labs Fleece Jacket $49.99 ADD TO CART Sauce Labs Onesie $7.99 ADD TO CART Test.allTheThings() T-Shirt (Red) $15.99 ADD TO CART Vertical scroll bar, 1 page Horizontal scroll bar, 1 page     © 2019 Sauce Labs. All Rights Reserved. Terms of Service | Privacy Policy Vertical scroll bar, 3 pages Horizontal scroll bar, 1 page ALL ITEMS WEBVIEW ABOUT LOGOUT RESET APP STATE\" enabled=\"true\" visible=\"false\" accessible=\"false\" x=\"0\" y=\"0\" width=\"375\" height=\"812\" index=\"0\" traits=\"\">\nE                   <XCUIElementTypeOther type=\"XCUIElementTypeOther\" name=\"Username Password LOGIN The currently accepted usernames for this application are:\nE           \nE           standard_user\nE           locked_out_user\nE           problem_user And the password for all users is:\nE           \nE           secret\n\ntests\\test_products_cart_sorting.py:401: Failed"}, "start": 1758027069389, "stop": 1758027176739, "uuid": "36d60b5f-9732-45a1-afa3-7e6696e98bfc", "historyId": "9a088125d44c350e3ba79d110eea5bb3", "testCaseId": "f53a28c62ea3db8c900cfbc05db17b3d", "fullName": "tests.test_products_cart_sorting#test_sorting_by_price", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products_cart_sorting"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "11776-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products_cart_sorting"}]}