{"name": "test_valid_login", "status": "broken", "statusDetails": {"message": "AttributeError: 'dict' object has no attribute 'to_capabilities'", "trace": "request = <SubRequest 'driver' for <Function test_valid_login>>\n\n    @pytest.fixture(scope=\"function\")\n    def driver(request):\n        \"\"\"\n        Create a fresh driver for each test function. Yields the Appium WebDriver.\n        Closes the session at the end of the test.\n        \"\"\"\n        hub = \"https://hub-cloud.browserstack.com/wd/hub\"\n    \n        try:\n            caps = _build_options()\n        except Exception as e:\n            pytest.skip(f\"Driver setup skipped: {e}\")\n    \n        driver = None\n        try:\n            # Appium Python client expects webdriver.Remote(command_executor=hub, options=options)\n            # older code sometimes uses desired_capabilities param; we use options=caps to match new clients.\n>           driver = webdriver.Remote(command_executor=hub, options=caps)\n\nconftest.py:64: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\db595\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:229: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x240ccfbcd70>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x00000240CCFBCEC0>, keep_alive = True\nfile_detector = None\noptions = {'appium:app': 'bs://bb87d435f3c19f20eb1118f1fe1145e35f0cd405', 'appium:automationName': 'XCUITest', 'bstack:options': {'accessKey': '7aU6Ny4pQdqVnJa8XxUw', 'buildName': 'pytest-run', 'deviceName': 'iPhone 14', 'osVersion': '18', ...}}\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, List[BaseOptions]]] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        :Args:\n         - command_executor - Either a string representing URL of the remote server or a custom\n             remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n         - keep_alive - Whether to configure remote_connection.RemoteConnection to use\n             HTTP keep-alive. Defaults to True.\n         - file_detector - Pass custom file detector object during instantiation. If None,\n             then default LocalFileDetector() will be used.\n         - options - instance of a driver options.Options class\n        \"\"\"\n    \n        if isinstance(options, list):\n            capabilities = create_matches(options)\n            _ignore_local_proxy = False\n        else:\n>           capabilities = options.to_capabilities()\nE           AttributeError: 'dict' object has no attribute 'to_capabilities'\n\nC:\\Users\\db595\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:192: AttributeError"}, "description": "User can log in with valid credentials.", "start": 1758001992179, "stop": 1758001992179, "uuid": "839eb1d5-012e-48b7-91ad-f82f1144a4e1", "historyId": "27b150db6705ef6511c7ecb21ff68d02", "testCaseId": "ab68c09e23714aa68c720c2ca07c0ecf", "fullName": "tests.test_login#test_valid_login", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "20060-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}