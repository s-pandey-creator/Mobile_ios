{"name": "test_sorting_by_price", "status": "broken", "statusDetails": {"message": "TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)", "trace": "@pytest.fixture(scope=\"session\")\n    def driver():\n        user = os.environ.get(\"BROWSERSTACK_USERNAME\", DEFAULT_BS_USER)\n        key = os.environ.get(\"BROWSERSTACK_ACCESS_KEY\", DEFAULT_BS_KEY)\n        app = os.environ.get(\"BROWSERSTACK_APP\", DEFAULT_BS_APP)\n    \n        if not (user and key and app):\n            raise RuntimeError(\"Set BROWSERSTACK_USERNAME, BROWSERSTACK_ACCESS_KEY and BROWSERSTACK_APP\")\n    \n        caps = {\n            \"platformName\": \"iOS\",\n            \"deviceName\": \"iPhone 14\",\n            \"app\": app,\n            # BrowserStack options:\n            \"bstack:options\": {\n                \"userName\": user,\n                \"accessKey\": key,\n                \"sessionName\": \"mobile_assignment_run\"\n            }\n        }\n    \n        url = \"https://hub-cloud.browserstack.com/wd/hub\"\n>       driver = webdriver.Remote(url, caps)\n\nconftest.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\db595\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\appium\\webdriver\\webdriver.py:249: in __init__\n    super().__init__(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <[AttributeError(\"'WebDriver' object has no attribute 'session_id'\") raised in repr()] WebDriver object at 0x1b52a29dfd0>\ncommand_executor = <appium.webdriver.appium_connection.AppiumConnection object at 0x000001B52A29E270>, keep_alive = True\nfile_detector = None, options = None\nlocator_converter = <appium.webdriver.locator_converter.AppiumLocatorConverter object at 0x000001B52A29E3C0>\nweb_element_cls = <class 'appium.webdriver.webelement.WebElement'>\nclient_config = <appium.webdriver.client_config.AppiumClientConfig object at 0x000001B52A29E120>\n\n    def __init__(\n        self,\n        command_executor: Union[str, RemoteConnection] = \"http://127.0.0.1:4444\",\n        keep_alive: bool = True,\n        file_detector: Optional[FileDetector] = None,\n        options: Optional[Union[BaseOptions, list[BaseOptions]]] = None,\n        locator_converter: Optional[LocatorConverter] = None,\n        web_element_cls: Optional[type[WebElement]] = None,\n        client_config: Optional[ClientConfig] = None,\n    ) -> None:\n        \"\"\"Create a new driver that will issue commands using the wire\n        protocol.\n    \n        Parameters:\n        -----------\n        command_executor : str or remote_connection.RemoteConnection\n            - Either a string representing the URL of the remote server or a custom\n            remote_connection.RemoteConnection object. Defaults to 'http://127.0.0.1:4444/wd/hub'.\n        keep_alive : bool (Deprecated)\n            - Whether to configure remote_connection.RemoteConnection to use HTTP keep-alive. Defaults to True.\n        file_detector : object or None\n            - Pass a custom file detector object during instantiation. If None, the default\n                LocalFileDetector() will be used.\n        options : options.Options\n            - Instance of a driver options.Options class.\n        locator_converter : object or None\n            - Custom locator converter to use. Defaults to None.\n        web_element_cls : class\n            - Custom class to use for web elements. Defaults to WebElement.\n        client_config : object or None\n            - Custom client configuration to use. Defaults to None.\n        \"\"\"\n    \n        if options is None:\n>           raise TypeError(\n                \"missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\"\nE               TypeError: missing 1 required keyword-only argument: 'options' (instance of driver `options.Options` class)\n\nC:\\Users\\db595\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:233: TypeError"}, "start": 1758022010688, "stop": 1758022010688, "uuid": "99f15cce-dc8f-4d13-b333-f10234de2f03", "historyId": "9a088125d44c350e3ba79d110eea5bb3", "testCaseId": "f53a28c62ea3db8c900cfbc05db17b3d", "fullName": "tests.test_products_cart_sorting#test_sorting_by_price", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_products_cart_sorting"}, {"name": "host", "value": "DB-L-174"}, {"name": "thread", "value": "8296-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_products_cart_sorting"}]}